name: CI
on:
  pull_request:
  push:
    branches:
      - main
  workflow_call:

defaults:
  run:
    shell: bash  # https://github.com/beeware/briefcase/pull/912

jobs:
  pre-commit:
    name: Pre-commit checks
    uses: beeware/.github/.github/workflows/pre-commit-run.yml@main
    with:
      pre-commit-source: "pre-commit"

  unit-tests:
    name: Unit tests
    needs: pre-commit
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        backend:
          - "macOS-Xcode"
          - "macOS-app"
          # AppImage builds (a) take over an hour, because the need to compile Numpy and
          # Pandas from source, and (b) are only here as a light validation that
          # Standalone Python is working. A Flatpak build also validates this, but
          # completes in minutes.
          # - "linux-appimage"
          - "linux-flatpak"
          - "windows-VisualStudio"
          - "windows-app"
          - "iOS"
          - "android"
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
        include:
          - runs-on: ubuntu-latest
          - pre-command:
          - briefcase-target:
          - briefcase-run-args:

          - backend: macOS-Xcode
            runs-on: macos-latest
            briefcase-target: "macOS Xcode"

          - backend: macOS-app
            runs-on: macos-latest
            briefcase-target: "macOS app"

          - backend: linux-system
            runs-on: ubuntu-latest
            python-version: "system"
            pre-command: "sudo apt-get update -y && sudo apt-get install -y python3-gi python3-gi-cairo gir1.2-gtk-3.0 python3-dev libgirepository1.0-dev libcairo2-dev pkg-config"
            briefcase-target: "linux system"

          # - backend: linux-appimage
          #   runs-on: ubuntu-latest
          #   pre-command: "sudo apt-get update -y && sudo apt-get install -y python3-gi python3-gi-cairo gir1.2-gtk-3.0 python3-dev libgirepository1.0-dev libcairo2-dev pkg-config libfuse2"
          #   briefcase-target: "linux appimage"

          - backend: linux-flatpak
            runs-on: ubuntu-latest
            pre-command: "sudo apt-get update -y && sudo apt-get install -y python3-gi python3-gi-cairo gir1.2-gtk-3.0 python3-dev libgirepository1.0-dev libcairo2-dev pkg-config flatpak flatpak-builder"
            briefcase-target: "linux flatpak"

          - backend: windows-VisualStudio
            runs-on: windows-latest
            briefcase-target: "windows VisualStudio"

          - backend: windows-app
            runs-on: windows-latest
            briefcase-target: "windows app"

          - backend: iOS
            runs-on: macos-latest
            briefcase-target: "iOS"
            briefcase-run-args: ' -d "iPhone SE (3rd generation)"'

          - backend: android
            runs-on: macos-latest
            briefcase-target: "android"
            briefcase-run-args: " -d '{\"avd\":\"beePhone\"}' --Xemulator=-no-window --Xemulator=-no-snapshot --Xemulator=-no-audio --Xemulator=-no-boot-anim --shutdown-on-exit"

        exclude:
          # Binary packages aren't available for 3.11+ on Android yet
          - backend: "android"
            python-version: "3.11"

          - backend: "android"
            python-version: "3.12"

            # Support packages for Flatpak aren't available for 3.12+ on Linux yet
          - backend: "linux-flatpak"
            python-version: "3.12"

    steps:
    - uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5.0.0
      if: matrix.python-version != 'system'
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: ${{ matrix.pre-command }}

    - name: Install Briefcase
      uses: beeware/.github/.github/actions/install-briefcase@main

    - name: Test App
      run: briefcase run ${{ matrix.briefcase-target }} --test ${{ matrix.briefcase-run-args }}

    - name: Package
      run: briefcase package ${{ matrix.briefcase-target }} --update --adhoc-sign

    - name: Upload logs
      uses: actions/upload-artifact@v4.0.0
      if: failure()
      with:
        name: build-failure-logs-${{ matrix.backend }}-${{ matrix.python-version }}
        path: logs/*
