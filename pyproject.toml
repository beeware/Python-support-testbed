[tool.briefcase]
project_name = "Testbed"
bundle = "org.beeware"
version = "0.0.1"
url = "https://beeware.org"
license.file = "LICENSE"
author = 'Russell Keith-Magee'
author_email = "russell@beeware.org"

[tool.briefcase.app.testbed]
formal_name = "Testbed"
description = "A testbed for the Apple Support packages."
long_description = """A test of common use cases and known problems with bundled apps.

Validates 3rd party module loading, as well as basic app packaging.
"""
icon = "icons/testbed"
sources = ["src/testbed"]
test_sources = ["tests"]

requires = [
    # Cryptography provides an ABI3 wheel for all desktop platforms, but requires cffi which doesn't.
    """cryptography; \
        (platform_system != 'iOS' and platform_system != 'Android' and python_version < '3.14') \
        or (platform_system == 'iOS' and python_version < '3.14') \
        or (platform_system == 'Android' and python_version < '3.14')""",
    # lru_dict not available anywhere on 3.14
    """lru_dict; \
        (platform_system != 'iOS' and platform_system != 'Android' and python_version < '3.14') \
        or (platform_system == 'iOS' and python_version < '3.14') \
        or (platform_system == 'Android' and python_version < '3.14')""",
    # pillow not available anywhere on 3.14
    """pillow; \
        (platform_system != 'iOS' and platform_system != 'Android' and python_version < '3.14') \
        or (platform_system == 'iOS' and python_version < '3.14') \
        or (platform_system == 'Android' and python_version < '3.14')""",
    # Numpy not available on iOS for 3.13+, or all on 3.14.
    """numpy; \
        (platform_system != 'iOS' and platform_system != 'Android' and python_version < '3.14') \
        or (platform_system == 'iOS' and python_version < '3.13') \
        or (platform_system == 'Android' and python_version < '3.14')""",
    # Pandas not available on iOS for 3.13+, or all on 3.14.
    """pandas; \
        (platform_system != 'iOS' and platform_system != 'Android' and python_version < '3.14') \
        or (platform_system == 'iOS' and python_version < '3.13') \
        or (platform_system == 'Android' and python_version < '3.14')""",
]
test_requires = [
    "pytest",
]
requirement_installer_args = [
    "-f", "./wheels"
]
[tool.briefcase.app.testbed.macOS]
requires = [
    # Provide a source of binary wheels that aren't provided on PyPI.
    "rubicon-objc",
    "std-nslog",
]
# support_package = "../Python-Apple-support/dist/Python-3.14-macOS-support.custom.tar.gz"

[tool.briefcase.app.testbed.macOS.app]
# template = "../../templates/briefcase-macOS-app-template"
# stub_binary = "../../templates/briefcase-macOS-Xcode-template/stub/build/gui-stub/macos/xcode/build/Release/GUI Stub.app/Contents/MacOS/GUI Stub"

[tool.briefcase.app.testbed.macOS.Xcode]
# template = "../../templates/briefcase-macOS-Xcode-template"

[tool.briefcase.app.testbed.linux]
requires=[
    'pycairo',
    'pygobject',
]

[tool.briefcase.app.testbed.linux.system.debian]
system_requires = [
    # Needed to compile pycairo wheel
    "libcairo2-dev",
    # Needed to compile PyGObject wheel
    "libgirepository1.0-dev",
]

system_runtime_requires = [
    # Needed to provide GTK and its GI bindings
    "gir1.2-gtk-3.0",
    "libgirepository-1.0-1",
    # Dependencies that GTK looks for at runtime
    "libcanberra-gtk3-module",
]

[tool.briefcase.app.testbed.linux.flatpak]
flatpak_runtime = "org.gnome.Platform"
flatpak_runtime_version = "45"
flatpak_sdk = "org.gnome.Sdk"

# template = "../../templates/briefcase-linux-flatpak-template"

[tool.briefcase.app.testbed.windows]
requires = [
    # Python.net isn't avaialble for 3.14 yet.
    "pythonnet>=3.0.0; python_version < '3.14'",
    # Windows doesn't provide the zoneinfo TZ database; use the Python provided one
    "tzdata",
]

[tool.briefcase.app.testbed.windows.app]
# template = "../../templates/briefcase-windows-app-template"

[tool.briefcase.app.testbed.windows.VisualStudio]
# template = "../../templates/briefcase-windows-VisualStudio-template"

# Mobile deployments
[tool.briefcase.app.testbed.iOS]
requires = [
    "rubicon-objc",
    "std-nslog",
]
# support_package = "../Python-Apple-support/dist/Python-3.14-iOS-support.custom.tar.gz"
# template = "../../templates/briefcase-iOS-Xcode-template"

[tool.briefcase.app.testbed.android]
requires = [
    # Android doesn't provide the zoneinfo TZ database; use the Python provided one
    "tzdata",
]

base_theme = "Theme.MaterialComponents.Light.DarkActionBar"

build_gradle_dependencies = [
    "com.google.android.material:material:1.11.0",
]

# template = "../../templates/briefcase-android-gradle-template"

[tool.isort]
profile = "black"
split_on_trailing_comma = true
combine_as_imports = true
